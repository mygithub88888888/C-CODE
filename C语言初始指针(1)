#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include<stdlib.h>
#include<string.h>
#include<windows.h>
#include<math.h>
#include<time.h>

                //本章重点
                //1.指针是什么
                //2.指针和指针类型
                //3.野指针
                //4.指针运算
                //5.指针和数组
                //6.二级指针
                //7.指针数组

                //初识指针(1)
//int main()
//{
//   int a = 10;
//   int*p = &a;//指针变量
//   //指针大小在32位平台上是4个字节 64位平台上是8个字节
//    return 0;
//}
//指针和指针类型
//int main()
//{
//    printf("%d\n",sizeof(char*));
//    printf("%d\n",sizeof(short*));
//    printf("%d\n",sizeof(int*));
//    printf("%d\n",sizeof(double*));
//      int a = 0x11223344;
//      int*pa = &a;
//      *pa = 0;//解引用
//      char*pc = &a;
//      *pc = 0;
//      printf("%p\n",pa);
//      printf("%p\n",pc);
      //指针类型决定了指针进行解引用能够访问给空间的大小
      //int*p : *p能够访问4个字节
      //char*p : *p能够访问1个字节
      //double*p : *p能够访问8个字节
//    return 0;
//}
//int main()
//{
//    int a = 0x11223344;
//    int*pa = &a;
//    char*pc = &a;
//    printf("%p\n",pa);
//    printf("%p\n",pa+1);
//
//    printf("%p\n",pc);
//    printf("%p\n",pc+1);
//
//    //指针类型决定了指针向前或向后走一步走多远（也就是决定了指针的步长）
//    //int*p;p+1 --> 4
//    //char*p;p+1 --> 1
//    //double*p;p+1 --> 8
//    return 0;
//}
//实例
//int main()
//{
//   int arr[10] = {0};
//   //int*p = arr;//数组名-首元素的地址
//   char*p = arr;//for循环中不能把数组元素由0改为1
//   int i = 0;
//   for(i=0;i<10;i++)
//   {
//       *(p+i) = 1;//把数组元素由0改为1
//   }
//    return 0;
//}
//野指针

//指针越界访问
//int main()
//{
//    int arr[10] = {0};
//    int*p = arr;
//    int i = 0;
//    for(i=0;i<12;i++)
//    {
//        p++;
//    }
//    //p++会越界 超过arr的范围 p就是野指针
//    return 0;
//}

//指针指向的空间释放
//int *test()
//{
//    int a = 10;
//    return &a;
//}
//int main()
//{
//    int *p = test();
//    *p = 20;
//    return 0;
//}









